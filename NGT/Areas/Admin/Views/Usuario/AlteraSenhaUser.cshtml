@model NGT.Models.Entities.Usuario
@{
    Layout = null;
}

<div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title txtBlack" id="TrocaSenha">Alteração de senha do Usuário</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="overflow-hidden">

            <form id="quickForm" novalidate="novalidate" method="post" action="@Url.RouteUrl("Admin.Usuario.AlteraSenha")">
                @Html.AntiForgeryToken()
                <div class="modal-footer col-11 col-md-12 m-0 pb-0 justify-content-between">
                    <div>
                        <label class="control-label text-muted">Usuário:</label>
                        @ViewBag.Usuario.Nome<input type="hidden" id="id" name="id" value="@ViewBag.Usuario.Id">
                    </div>
                </div>

                <div class="card-body">

                    <div class="form-group">
                        <label for="passwordAtual">Senha atual</label>
                        <input type="password" name="passwordAtual" class="form-control" id="passwordAtual" placeholder="Senha Atual">
                    </div>

                    <div class="form-group">
                        <label for="passwordNovo">Nova senha</label>
                        <input type="password" name="passwordNovo" class="form-control" id="passwordNovo" placeholder="Nova Senha">
                    </div>

                    <div class="form-group">
                        <label for="novoRepete">Repita a nova senha</label>
                        <input type="password" name="novoRepete" class="form-control" id="novoRepete" placeholder="Repita a Senha">
                    </div>

                </div>

                <div class="modal-footer col-11 col-md-12">
                    <button type="submit" class="btn btn-default float-right">
                        <i class="fas fa-solid fa-floppy-disk"></i>
                        Salvar
                    </button>
                </div>
            </form>



            @*@using (Html.BeginForm("AlteraSenha", "Usuario", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    


                    <div class="form-group">
                        <label for="exampleInputPassword1">Password</label>
                        <input type="password" name="password" class="form-control is-invalid" id="exampleInputPassword1" placeholder="Password" aria-describedby="exampleInputPassword1-error" aria-invalid="true">
                        <span id="exampleInputPassword1-error" class="error invalid-feedback">Your password must be at least 5 characters long</span>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Senha, "Senha: ", htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control col-10 col-md-11", @placeholder = "Senha..." } })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger text-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, "Nome: ", htmlAttributes: new { @class = "control-label pl-3 pt-3" })
                        <div class="col-md-12 pl-3 pr-3">
                            <input type="text" name="Nome" class="form-control col-11 col-md-12" value="@ViewBag.Usuario.Nome">
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="modal-footer col-11 col-md-12">
                        <button type="submit" class="btn btn-default float-right">
                            <i class="fas fa-solid fa-floppy-disk"></i>
                            Salvar
                        </button>
                    </div>

                }*@

        </div>
    </div>
</div>

<script src="~/Areas/Admin/Content/Libs/jquery-validation/jquery.validate.min.js"></script>
<script src="~/Areas/Admin/Content/Libs/jquery-validation/additional-methods.min.js"></script>
<script>
    $(function () {
        $('#quickForm').validate({
            rules: {
                passwordAtual: {
                    required: true,
                    rangelength: [8, 20]
                },
                passwordNovo: {
                    required: true,
                    rangelength: [8, 20]
                },
                novoRepete: {
                    required: true,
                    rangelength: [8, 20],
                    equalTo: "#passwordNovo"
                },
            },
            messages: {
                passwordAtual: {
                    required: "Insira uma senha válida",
                    minlength: "A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, letras minúsculas, números e caracteres especiais"
                },
                passwordNovo: {
                    required: "Insira uma senha válida",
                    minlength: "A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, letras minúsculas, números e caracteres especiais"
                },
                novoRepete: {
                    required: "Insira uma senha válida",
                    minlength: "A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, letras minúsculas, números e caracteres especiais",
                    equalTo: "As senhas não correspondem"
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });
</script>



@section ScriptPage {

}
